{new
   MidiParser
   check_trainer_pro_guitar
   (track_name 'PART REAL_GUITAR')
   (text
      ;{dx_log_writer info {sprint "func: check_trainer_pro_guitar"}}
      ;{dx_log_writer info
      ;   {sprintf "Executed check_trainer_pro_guitar - time: %.4fms"
      ;      {time
               {if
                  {has_any_substr
                        $mp.val
                        (pg_ _pg)}
                  {set $dx_trainer_real_guitar TRUE}
               }
      ;      }
      ;   }
      ;}
      ;{dx_log_writer info {sprint "guitar trainer checker - " $dx_trainer_real_guitar}}
   )
}
{new
   MidiParser
   check_trainer_pro_bass
   (track_name 'PART REAL_BASS')
   (text
      ;{dx_log_writer info {sprint "func: check_trainer_pro_bass"}}
      ;{dx_log_writer info
      ;   {sprintf "Executed check_trainer_pro_bass - time: %.4fms"
      ;      {time
               {if
                  {has_any_substr
                        $mp.val
                        (_pb pb_)}
                  {set $dx_trainer_real_bass TRUE}
               }
      ;      }
      ;   }
      ;}
      ;{dx_log_writer info {sprint "bass trainer checker - " $dx_trainer_real_bass}}
   )
}
{new
   MidiParser
   check_trainer_pro_keys
   (track_name 'PART REAL_KEYS_X')
   (text
      ;{dx_log_writer info {sprint "func: check_trainer_pro_keys"}}
      ;{dx_log_writer info
      ;   {sprintf "Executed check_trainer_pro_keys - time: %.4fms"
      ;      {time
               {if
                  {has_any_substr
                        $mp.val
                        (_pk pk_ _key key_)}
                  {set $dx_trainer_real_keys TRUE}
               }
      ;      }
      ;   }
      ;}
      ;{dx_log_writer info {sprint "keys trainer checker - " $dx_trainer_real_keys}}
   )
}
{new
   MidiParser
   check_trainer_pro_drums
   (track_name 'PART DRUMS')
   (text
      ;{dx_log_writer info {sprint "func: check_trainer_pro_drums"}}
      ;{dx_log_writer info
      ;   {sprintf "Executed check_trainer_pro_drums - time: %.4fms"
      ;      {time
               {if
                  {has_any_substr
                        $mp.val
                        (_drm drm_ challenge)}
                  {set $dx_trainer_real_drum TRUE}
               }
      ;      }
      ;   }
      ;}
      ;{dx_log_writer info {sprint "drum trainer checker - " $dx_trainer_real_drum}}
   )
}
{new
   MidiParser
   beat_parser
   (track_name 'BEAT')
   (midi
      ;{dx_log_writer insane {sprint "func: check_trainer_pro_guitar"}}
      ;{dx_log_writer insane
      ;   {sprintf "Executed check_trainer_pro_guitar - time: %.4fms"
      ;      {time
               {switch
                  $mp.val
                  (12 {dx_log_writer_stagekit data {sprint "(major)," {beat_to_seconds $mp.start}}})
                  (13 {dx_log_writer_stagekit data {sprint "(minor)," {beat_to_seconds $mp.start}}})
                  kDataUnhandled}
      ;      }
      ;   }
      ;}
   )
}
{new
   MidiParser
   next_parser
   (track_name 'VENUE')
   (text
      {switch $mp.val
         ;(verse {dx_log_writer_stagekit data {sprint "(verse)," {beat_to_seconds $mp.start}}})
         ;(chorus {dx_log_writer_stagekit data {sprint "(chorus)," {beat_to_seconds $mp.start}}})
         (lighting {dx_log_writer_stagekit data {sprint {elem $mp.data 1} "," {beat_to_seconds $mp.start}}})
         kDataUnhandled
      }
   )
   (midi
      ;{dx_log_writer insane {sprint "func: check_trainer_pro_guitar"}}
      ;{dx_log_writer insane
      ;   {sprintf "Executed check_trainer_pro_guitar - time: %.4fms"
      ;      {time
               {switch
                  $mp.val
                  (48 {dx_log_writer_stagekit data {sprint "(next)," {beat_to_seconds $mp.start}}})
                  kDataUnhandled}
      ;      }
      ;   }
      ;}
   )
}
{new
   MidiParser
   stagekit_drum_parser
   (track_name 'PART DRUMS')
   (midi
      ;{dx_log_writer insane {sprint "func: check_trainer_pro_guitar"}}
      ;{dx_log_writer insane
      ;   {sprintf "Executed check_trainer_pro_guitar - time: %.4fms"
      ;      {time
               {switch
                  $mp.val
                  (97 {dx_log_writer_stagekit data {sprint "(snare)," {beat_to_seconds $mp.start}}})
                  kDataUnhandled}
      ;      }
      ;   }
      ;}
   )
}
{new
   MidiParser
   stagekit_vocal_parser
   (track_name 'PART VOCALS')
   (midi
      ;{dx_log_writer insane {sprint "func: check_trainer_pro_guitar"}}
      ;{dx_log_writer insane
      ;   {sprintf "Executed check_trainer_pro_guitar - time: %.4fms"
      ;      {time
               {switch
                  $mp.val
                  (
                     (
                        36 37 38 39 40 41 42 43 44 45
                        56 57 58 59 60 61 62 63 64 65
                        66 67 68 69 70 71 72 73 74 75
                        76 77 78 79 80 81 82 83
                     )
                     {dx_log_writer_stagekit data {sprint "(vocal_end)," {beat_to_seconds $mp.end}}}
                  )
                  kDataUnhandled}
      ;      }
      ;   }
      ;}
   )
}